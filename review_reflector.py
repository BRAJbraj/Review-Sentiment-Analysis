# -*- coding: utf-8 -*-
"""review_reflector.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1On4oKs0JH6bJhdk9_Wg671YNxSrNL2Nd
"""

#!pip install streamlit

import streamlit as st
import subprocess
import sys
import os  # Add this

st.title("Review Sentiment Analysis")
# Initialize session state for form visibility
if 'show_form' not in st.session_state:
    st.session_state.show_form = True

# Add this line to ensure we're in the right directory
os.chdir(os.path.dirname(os.path.abspath('Downloads')))

if st.session_state.show_form:
    with st.form("review_form"):
        review = st.text_area("Enter your review here!", key='text_area_1')
        submitted = st.form_submit_button("Submit")

    if submitted:
        if review.strip() == "":
            st.warning("Please enter a review before submitting.")
        else:
            # Store the review and hide the form
            st.session_state.review = review
            st.session_state.show_form = False
            st.rerun()

else:
    # Process the stored review
    review = st.session_state.review

    with st.spinner('Your work is in progress...'):
        try:
            proc = subprocess.run([sys.executable, 'loading_modelandrunning.py'],
                           input=review,
                           stdout=subprocess.PIPE,
                           stderr=subprocess.PIPE,
                           timeout=60,
                           text=True,
                           check=True
                           )
        except subprocess.CalledProcessError as e:
            st.error(f"Script failed: {e.stderr}")
            # Add button even when there's an error
            if st.button("Want to try next"):
                st.session_state.show_form = True
                st.rerun()
        else:
            if proc.returncode == 0:
                output = proc.stdout.strip().splitlines()  # split output into lines
                if output:
                    final_line = output[-1]  # take only the last line
                    st.success("Script executed successfully!")
                    st.subheader("Result:")
                    st.text(final_line)

                    # Add the "Want to try next" button
                    if st.button("Want to try next"):
                        st.session_state.show_form = True
                        st.rerun()
                else:
                    st.error("No output received from script.")
                    # Add button even when there's no output
                    if st.button("Want to try next"):
                        st.session_state.show_form = True
                        st.rerun()